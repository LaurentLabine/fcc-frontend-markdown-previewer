{"version":3,"sources":["previewer/actions.js","previewer/reducer.js","configure-store.js","previewer/component.js","previewer/container.js","App.js","reportWebVitals.js","index.js"],"names":["INPUT_UPDATED","EDITOR_MAXIMIZED","OUTPUT_MAXIMIZED","initialText","store","createStore","state","type","text","editorMaximized","outputMaximized","action","console","log","marked","require","setOptions","breaks","ContainerHeader","styled","header","BodyContainer","div","Container","editorStyle","boxSizing","height","display","width","margin","paddingLeft","border","marginTop","resize","previewStyle","textAlign","padding","overflow","Preview","props","style","dangerouslySetInnerHTML","__html","input","id","Editor","onChange","value","MarkdownPreviewer","class","this","inputChanged","document","getElementById","React","Component","connect","dispatch","data","library","add","fas","fab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kPAIaA,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAmB,mBCJhC,I,MAAMC,EAAW,+rCCCJC,EAAQC,aD8CU,WAAsH,IAA7GC,EAA4G,uDAApG,CAAEC,KAAMP,EAAeQ,KAAML,EAAaM,iBAAiB,EAAOC,iBAAiB,GAASC,EAAQ,uCAChJ,OAAQA,EAAOJ,MACX,KAAKP,EAED,OADAY,QAAQC,IAAI,iBACL,CACHN,KAAM,gBACNC,KAAMG,EAAOH,MAErB,KAAKP,EAED,OADAW,QAAQC,IAAI,qBACL,CACHN,KAAM,sBACNG,iBAAiB,EACjBD,iBAAiB,GAEzB,KAAKP,EAED,OADAU,QAAQC,IAAI,qBACL,CACHN,KAAM,sBACNE,iBAAiB,EACjBC,iBAAiB,GAEzB,QACI,MAAO,CACHH,KAAM,cACNC,KAAMF,EAAME,KACZC,iBAAiB,EACjBC,iBAAiB,O,6DExE3BI,EAASC,EAAQ,IAGvBD,EAAOE,WAAW,CAChBC,QAAQ,IAIV,IAAMC,EAAkBC,IAAOC,OAAV,2LAOfC,EAAgBF,IAAOG,IAAV,gYASbC,EAAYJ,IAAOG,IAAV,+GAQTE,EAAc,CAClBC,UAAW,aACXC,OAAQ,MACRC,QAAS,OACTC,MAAO,MACPC,OAAQ,SACRC,YAAa,OACbC,OAAQ,OACRC,UAAW,OACXC,OAAQ,QAGJC,EAAe,CACnBC,UAAW,OACXN,OAAQ,OACRO,QAAS,OACTV,OAAQ,OACRW,SAAU,OACVL,UAAW,OACXD,OAAQ,mBAKJO,EAAU,SAAAC,GACd,OACE,qBAAKC,MAAON,EACVO,wBAAyB,CACvBC,OAAQ5B,EAAOyB,EAAMI,QAEvBC,GAAG,aAIHC,EAAS,SAAAN,GACb,OACE,0BAAUC,MAAOhB,EACjBsB,SAAUP,EAAMO,SAChBC,MAAQR,EAAMI,MACZC,GAAG,YAKII,EAAb,4JACI,WAAU,IAAD,OACL,OACA,eAAC3B,EAAD,WACE,eAACE,EAAD,WACE,cAACL,EAAD,CAAiB+B,MAAM,YAAvB,0BACA,cAAC,EAAD,CAAQN,MAAOO,KAAKX,MAAM/B,KAAMsC,SAAY,kBAAM,EAAKP,MAAMY,aAAaC,SAASC,eAAe,UAAUN,aAE9G,eAACxB,EAAD,WACE,cAACL,EAAD,CAAiB+B,MAAM,YAAvB,4BACA,cAAC,EAAD,CAASN,MAAOO,KAAKX,MAAM/B,iBAVvC,GAAuC8C,IAAMC,WC5DhChC,EAAYiC,aAfD,SAAAlD,GAEpB,OADAM,QAAQC,IAAI,mBACL,CACHL,KAAMF,EAAME,KACZC,gBAAiBH,EAAMG,gBACvBC,gBAAiBJ,EAAMI,oBAGJ,SAAA+C,GACvB,MAAO,CACHN,aAAc,SAACO,GAAD,OAAUD,GJFJjD,EIEyBkD,EJDjD9C,QAAQC,IAAI,sBACL,CAAEN,KAAMP,EAAeQ,UAF3B,IAAqBA,GIGpBC,gBAAiB,SAACiD,GAAD,OAAUD,GJG/B7C,QAAQC,IAAI,6BACL,CAAEN,KAAMN,MIHXS,gBAAiB,SAACgD,GAAD,OAAUD,GJO/B7C,QAAQC,IAAI,6BACL,CAAEN,KAAML,SILMsD,CAA6CR,G,wBCXtEW,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,KAGZ,IAMeC,EANH,kBACV,cAAC,IAAD,CAAU3D,MAAOA,EAAjB,SACE,cAAC,EAAD,OCHW4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASC,eAAe,SAM1BW,M","file":"static/js/main.cb19199f.chunk.js","sourcesContent":["/*\r\n * action types\r\n */\r\n\r\nexport const INPUT_UPDATED = \"INPUT_UPDATED\"\r\nexport const EDITOR_MAXIMIZED = \"EDITOR_MAXIMIZED\"\r\nexport const OUTPUT_MAXIMIZED = \"OUTPUT_MAXIMIZED\"\r\n\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function updateInput(text) {\r\n    console.log(\"updateInput called\")\r\n    return { type: INPUT_UPDATED, text };\r\n}\r\n\r\nexport function maximizeEditor() {\r\n    console.log(\"containerMaximized called\")\r\n    return { type: EDITOR_MAXIMIZED };\r\n}\r\n\r\nexport function maximizeOutput() {\r\n    console.log(\"containerMaximized called\")\r\n    return { type: OUTPUT_MAXIMIZED };\r\n}","import { INPUT_UPDATED, EDITOR_MAXIMIZED, OUTPUT_MAXIMIZED } from \"./actions\"\r\n\r\nconst initialText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\nPowered by\r\n\r\n![React Logo w/ Text](https://assets.website-files.com/5d3152346d95065922960b3a/5e3a1ff80e42b09129d3cacd_React_logo.png)\r\n`;\r\n\r\nexport const markdownReducer = function(state = { type: INPUT_UPDATED, text: initialText, editorMaximized: false, outputMaximized: false }, action) {\r\n    switch (action.type) {\r\n        case INPUT_UPDATED:\r\n            console.log(\"Input_Updated\")\r\n            return {\r\n                type: \"Input Updated\",\r\n                text: action.text\r\n            };\r\n        case EDITOR_MAXIMIZED:\r\n            console.log(\"EDITOR_MAXIMIZED \")\r\n            return {\r\n                type: \"Container Maximized\",\r\n                outputMaximized: false,\r\n                editorMaximized: true\r\n            };\r\n        case OUTPUT_MAXIMIZED:\r\n            console.log(\"OUTPUT_MAXIMIZED \")\r\n            return {\r\n                type: \"Container Maximized\",\r\n                editorMaximized: false,\r\n                outputMaximized: true\r\n            };\r\n        default:\r\n            return {\r\n                type: \"initialized\",\r\n                text: state.text,\r\n                editorMaximized: false,\r\n                outputMaximized: false\r\n            };\r\n    }\r\n};","import { createStore } from 'redux';\r\nimport { markdownReducer } from './previewer/reducer';\r\n\r\nexport const store = createStore(markdownReducer);\r\n","import { faBlackTie } from '@fortawesome/free-brands-svg-icons';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport '../component.css'; \r\nconst marked = require(\"marked\");\r\n\r\n//Marked Configuration\r\nmarked.setOptions({\r\n  breaks: true\r\n});\r\n\r\n//Styled-Components Elements definition\r\nconst ContainerHeader = styled.header `\r\n    padding-top: 3rem;\r\n    color: #8d94ba;\r\n    text-shadow: -1px 0 0 #000000, 1px 1px 0 #000000, 2px -1px 0 #000000, 3px 0 0 #000000;\r\n    font-size: 56px;\r\n`\r\n\r\nconst BodyContainer = styled.div `\r\n  background: linear-gradient(to right, rgba(0,0,0,0), teal), linear-gradient(to right, rgba(255,0,100,.3), rgba(255,100,127,.2)), linear-gradient(to top right, yellow, rgba(0,0,0,0)), radial-gradient(closest-corner at 20% 80%, yellow, red);\r\n  background-attachment: fixed;\r\n  display: flex;\r\n  text-align: center;\r\n  min-width: 500px;\r\n  height: 100vh;\r\n`\r\n\r\nconst Container = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\nfloat: left;\r\nwidth: 50%;\r\nmargin: 2rem;\r\n`\r\n//Style Objects\r\nconst editorStyle = {\r\n  boxSizing: \"border-box\",\r\n  height: \"50%\",\r\n  display: \"flex\",\r\n  width: \"80%\",\r\n  margin: \"0 auto\",\r\n  paddingLeft: \"20px\",\r\n  border: \"none\",\r\n  marginTop: \"4rem\",\r\n  resize: \"none\"\r\n}\r\n\r\nconst previewStyle = {\r\n  textAlign: \"left\",\r\n  margin: \"30px\",\r\n  padding: \"10px\",\r\n  height: \"70vh\",\r\n  overflow: \"auto\",\r\n  marginTop: \"4rem\",\r\n  border: \"1px solid black\"\r\n}\r\n\r\n\r\n//Functional Components\r\nconst Preview = props => {\r\n  return (\r\n    <div style={previewStyle}\r\n      dangerouslySetInnerHTML={{\r\n        __html: marked(props.input)\r\n      }}\r\n      id='preview'/>\r\n  );\r\n};\r\n\r\nconst Editor = props => {\r\n  return (\r\n    <textarea style={editorStyle}\r\n    onChange={props.onChange}\r\n    value= {props.input}\r\n      id='editor'/>\r\n  );\r\n};\r\n\r\n//Stateful Component\r\nexport class MarkdownPreviewer extends React.Component {    \r\n    render() {\r\n        return ( \r\n        <BodyContainer>  \r\n          <Container>\r\n            <ContainerHeader class=\"castellar\">Markup Here!</ContainerHeader>        \r\n            <Editor input={this.props.text} onChange = {() => this.props.inputChanged(document.getElementById(\"editor\").value)}/>\r\n          </Container>\r\n          <Container>\r\n            <ContainerHeader class=\"castellar\">Magical Output</ContainerHeader>\r\n            <Preview input={this.props.text} />\r\n          </Container>\r\n        </BodyContainer>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport { MarkdownPreviewer } from './component'\r\nimport { updateInput, maximizeEditor, maximizeOutput } from \"./actions\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(\"MapState called\")\r\n    return {\r\n        text: state.text,\r\n        editorMaximized: state.editorMaximized,\r\n        outputMaximized: state.outputMaximized,\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        inputChanged: (data) => dispatch(updateInput(data)),\r\n        editorMaximized: (data) => dispatch(maximizeEditor(data)),\r\n        outputMaximized: (data) => dispatch(maximizeOutput(data)),\r\n    }\r\n};\r\nexport const Container = connect(mapStateToProps, mapDispatchToProps)(MarkdownPreviewer);","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './configure-store';\r\nimport { Container } from './previewer/container';\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlibrary.add(fas);\r\nlibrary.add(fab);\r\n\r\n\r\nconst App = () => (\r\n  <Provider store={store}>\r\n    <Container />\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}